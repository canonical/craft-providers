name: QA
on:
  push:
    branches:
      - "main"
      - "feature/*"
      - "hotfix/*"
      - "release/*"
      - "renovate/*"
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  lint:
    uses: canonical/starflow/.github/workflows/lint-python.yaml@main
  test:
    uses: canonical/starflow/.github/workflows/test-python.yaml@main
    with:
      # Fast tests run on several Ubuntu platforms and macos on ARM
      fast-test-platforms: '["ubuntu-24.04", "ubuntu-24.04-arm", "macos-13"]'
      fast-test-python-versions: '["3.10", "3.12", "3.13"]'
      # Slow tests (which include everything that needs multipass) run on several Ubuntu platforms
      slow-test-platforms: '["ubuntu-24.04", "ubuntu-24.04-arm"]'
      slow-test-python-versions: '["3.12"]'
      lowest-python-platform: "ubuntu-22.04"
      lowest-python-version: "3.10"
      use-lxd: true
  macos-smoketest:
    name: macOS smoke tests
    strategy:
      matrix:
        platform: [macos-15-large]
    runs-on: ${{ matrix.platform }}
    env:
      PYTEST_ADDOPTS: --no-header -v -rN -m 'smoketest'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # On mac, set up homebrew caching since we use homebrew to install dependencies.
      - name: Set up Homebrew
        if: runner.os == 'macOS'
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master
      - name: Cache Homebrew Bundler RubyGems
        if: runner.os == 'macOS'
        id: cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.set-up-homebrew.outputs.gems-path }}
          key: ${{ runner.os }}-rubygems-${{ steps.set-up-homebrew.outputs.gems-hash }}
          restore-keys: ${{ runner.os }}-rubygems-
      - name: Install Homebrew Bundler RubyGems
        if: steps.cache.outputs.cache-hit != 'true' && runner.os == 'macOS'
        run: brew install-bundler-gems

      - name: Set up uv with caching
        id: setup-uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-suffix: ${{ toJSON(matrix.platform) }}
          python-version: ${{ matrix.python-version }}
          ignore-nothing-to-cache: true
      - name: Install tools
        run: |
          make setup-tests
      - name: Run tests
        run: |
          make test-coverage
      - name: Upload test coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-slow-${{ matrix.platform }}-${{ matrix.python-version }}
          overwrite: true
          path: |
            ./coverage.xml
            htmlcov/**
