name: Tests

on:
  push:
    branches:
      - "main"
      - "release/*"
      - "hotfix/*"
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  tests:
    name: Ubuntu 20.04 Tests
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install craft-providers
        run: |
            pip install -U .[dev]
      - name: Run black
        run: |
          make test-black
      - name: Run codespell
        run: |
          make test-codespell
      - name: Run flake8
        run: |
          make test-flake8
      - name: Run isort
        run: |
          make test-isort
      - name: Run mypy
        run: |
          make test-mypy
      - name: Run pydocstyle
        run: |
          make test-pydocstyle
      - name: Run pylint
        run: |
          make test-pylint
      - name: Run pyright
        run: |
          pip install "pyright==1.1.301"
          make test-pyright
      - name: Install LXD
        run: |
          sudo groupadd --force --system lxd
          sudo usermod --append --groups lxd $USER
          sudo snap refresh lxd
          sudo snap start lxd
          sudo lxd waitready --timeout=30
          sudo lxd init --auto
      - name: Run integration tests on Linux
        run: |
          export CRAFT_PROVIDERS_TESTS_ENABLE_SNAP_INSTALL=1
          export CRAFT_PROVIDERS_TESTS_ENABLE_LXD_INSTALL=1
          export CRAFT_PROVIDERS_TESTS_ENABLE_LXD_UNINSTALL=1
          sg lxd -c "lxc version"
          sg lxd -c "make test-integrations"
      - name: Upload code coverage
        uses: codecov/codecov-action@v1

  macos-integration-tests:
    name: MacOS Integration Tests
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install craft-providers
        run: |
          pip3 install -U .[dev]
          pip3 install -U -e .
      - name: Install Multipass
        run: |
          brew update
          brew install multipass
          sleep 20
          multipass set local.driver=qemu
          sleep 20
          multipass version
      - name: Run integration tests on MacOS
        run: |
          export CRAFT_PROVIDERS_TESTS_ENABLE_MULTIPASS_INSTALL=1
          export CRAFT_PROVIDERS_TESTS_ENABLE_MULTIPASS_UNINSTALL=1
          make test-integrations

  unit-tests:
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-10.15, windows-2019]
        python-version: ["3.8", "3.9", "3.10"]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install craft-providers
        run: |
          pip install -U .[dev]
          pip install -U -e .
      - name: Run unit tests for Python ${{ matrix.python-version }}
        run: make test-units
